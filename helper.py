import hashlib

def hash_SHA1(string):
    return hashlib.sha1(string.encode('utf-8')).digest()

def getHelp():
    print("usage: python3 ./main.py <CMD> [OPTIONS]")

    print("\n")
    print("Available commands with optionnal options:")
    print("  --hash                  hash a string")
    print("         --word=<s>              string to hash")
    print("  --showConfig            details about the configuration")
    print("  --i2c                   Run the i2c function with the current configuration")
    print("         --word_index=<i>        index of the string in the current config")
    print("  --h2i                   Run the h2i function with the current configuration")
    print("         --word=<s>              string to pass to h2i")
    print("  --nouvelle_chaine       Find the index result with the width of a table with the current configuration")
    print("         --word_index=<i>        index of the string in the current config")
    print("         --width=<i>             width of the table")
    print("  --creer_table_fichier   Create the rainbow table with the current config")
    print("         --height=<i>            height of the table")
    print("         --width=<i>             width of the table")
    print("         --load=<s>              file to write the rainbow table, must be a txt")
    print("  --affiche_table         Show the rainbow table with the current config")
    print("         --load=<s>              file to write the rainbow table, must be a txt")
    print("  --crack                 Crack an hash given with a raindow table")
    print("         --hash_to_crack=<s>     hash that we want to crack")
    print("         --width=<i>             width of the table")
    print("         --load=<s>              file to load the rainbow table, must be a txt")
    print("  --crack_exhaustive      Crack an hash given with a raindow table with an exhastive search")
    print("         --hash_to_crack=<s>     hash that we want to crack")
    print("         --width=<i>             width of the table")
    print("         --load=<s>              file to load the rainbow table, must be a txt")
    print("  --stats                 Get the coverage of a rainbow table")
    print("         --height=<i>            height of the table")
    print("         --width=<i>             width of the table")
    
    print("\n")
    print("Available options:")
    print("  --load=<s>              file to load the rainbow table, must be a txt")
    print("  --size=<i>              number of characters for clear text")
    print("  --size_min=<i>          min number of characters for clear text")
    print("  --size_max=<i>          max number of characters for clear text")
    print("  --alphabet=<s>          allowed characters for clear text")
    print("  --abc=<N>               choose standard alphabet:")
    print("         N=26               abcdefghijklmnopqrstuvwxyz (default)")
    print("         N=26A              ABCDEFGHIJKLMNOPQRSTUVWXYZ")
    print("         N=36               abcdefghijklmnopqrstuvwxyz0123456789")
    print("         N=40               abcdefghijklmnopqrstuvwxyz0123456789,;:$.")
    print("         N=52               ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")
    print("         N=62               0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")
    print("         N=66               0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz,;:$")

def getTestExamples():
    print("Available tests:")
    print("    test hash                    python .\main.py --test --hash")
    print("    test i2c                     python .\main.py --test --i2c")
    print("    test h2i                     python .\main.py --test --h2i")
    print("    test nouvelle_chaine         python .\main.py --test --nouvelle_chaine")
    print("    test creer_table_fichier     python .\main.py --test --creer_table_fichier")
    print("    test affiche_table           python .\main.py --test --affiche_table")
    print("    test crack                   python .\main.py --test --crack")